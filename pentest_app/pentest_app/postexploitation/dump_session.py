# Dump de session réseau (exemple basique)
import os
import subprocess
import shutil
import platform

def dump_sessions(outil="netstat", progress_callback=None):
    def log(msg):
        if progress_callback:
            progress_callback(msg)
        else:
            print(msg)
    log(f"Dump des sessions réseau avec l'outil : {outil}")
    if outil == "netstat":
        log("Affichage des connexions réseau en cours...")
        cmd = None
        system = platform.system().lower()
        if shutil.which("ss") and system in ("linux", "darwin"):
            cmd = "ss -tunap"
        elif shutil.which("netstat"):
            # Sur Linux, utiliser -tunap; sur Windows, -ano est le plus compatible
            cmd = "netstat -tunap" if system == "linux" else "netstat -ano"
        else:
            log("Aucun outil réseau ('ss' ou 'netstat') n'a été trouvé dans le PATH.")
            return
        try:
            result = os.popen(cmd).read()
            log(result)
        except Exception as e:
            log(f"Erreur lors de l'exécution de '{cmd}': {e}")
        log("Dump terminé.")
    elif outil == "suricata":
        log("Analyse des sessions réseau avec Suricata...")
        try:
            result = subprocess.run(["suricata", "-r", "capture.pcap"], capture_output=True, text=True)
            log(result.stdout)
        except Exception as e:
            log(f"Erreur lors de l'exécution de Suricata : {e}")
    elif outil == "metasploit":
        log("Dump de session avec Metasploit (nécessite Metasploit installé et configuré)")
        log("Veuillez lancer le module Metasploit adapté (ex: auxiliary/server/capture/pop3) via msfconsole ou l'API.")
        # Pour une intégration avancée, il faudrait utiliser l'API Metasploit
    else:
        log("Outil non reconnu. Utilisez 'netstat', 'suricata' ou 'metasploit'.")
