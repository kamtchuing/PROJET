# Analyse du réseau interne
from scapy.all import ARP, Ether, srp
import subprocess

def analyse_reseau_interne(target_subnet, outil="scapy"):
    print(f"Analyse du réseau interne sur {target_subnet} avec l'outil : {outil}")
    if outil == "scapy":
        # Scan ARP pour détecter les machines actives
        pkt = Ether(dst="ff:ff:ff:ff:ff:ff")/ARP(pdst=target_subnet)
        ans, _ = srp(pkt, timeout=2, verbose=0)
        if ans:
            for snd, rcv in ans:
                print(f"IP: {rcv.psrc}, MAC: {rcv.hwsrc}")
        else:
            print("Aucune machine détectée sur le réseau.")
        print("Analyse terminée.")
    elif outil == "suricata":
        print("Analyse réseau avec Suricata...")
        try:
            result = subprocess.run(["suricata", "-r", target_subnet], capture_output=True, text=True)
            print(result.stdout)
        except Exception as e:
            print(f"Erreur lors de l'exécution de Suricata : {e}")
    elif outil == "metasploit":
        print("Analyse réseau avec Metasploit (nécessite Metasploit installé et configuré)")
        print("Veuillez lancer le module Metasploit adapté (ex: auxiliary/scanner/discovery/arp_sweep) via msfconsole ou l'API.")
        # Pour une intégration avancée, il faudrait utiliser l'API Metasploit
    else:
        print("Outil non reconnu. Utilisez 'scapy', 'suricata' ou 'metasploit'.")
