# Exploration du réseau interne
import socket
import subprocess

def exploration_reseau_interne(target_subnet, outil="socket"):
    print(f"Exploration du réseau interne sur {target_subnet} avec l'outil : {outil}")
    if outil == "socket":
        ip_base = target_subnet.rsplit('.', 1)[0]
        for i in range(1, 255):
            ip = f"{ip_base}.{i}"
            for port in [80, 443]:
                try:
                    s = socket.socket()
                    s.settimeout(0.5)
                    s.connect((ip, port))
                    print(f"Machine {ip} : port {port} ouvert")
                    s.close()
                except Exception:
                    pass
        print("Exploration terminée.")
    elif outil == "suricata":
        print("Exploration réseau avec Suricata...")
        try:
            result = subprocess.run(["suricata", "-r", target_subnet], capture_output=True, text=True)
            print(result.stdout)
        except Exception as e:
            print(f"Erreur lors de l'exécution de Suricata : {e}")
    elif outil == "metasploit":
        print("Exploration réseau avec Metasploit (nécessite Metasploit installé et configuré)")
        print("Veuillez lancer le module Metasploit adapté (ex: auxiliary/scanner/discovery/arp_sweep) via msfconsole ou l'API.")
        # Pour une intégration avancée, il faudrait utiliser l'API Metasploit
    else:
        print("Outil non reconnu. Utilisez 'socket', 'suricata' ou 'metasploit'.")
